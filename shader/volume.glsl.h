#pragma once
/*
    #version:1# (machine generated, don't edit!)

    Generated by sokol-shdc (https://github.com/floooh/sokol-tools)

    Cmdline:
        sokol-shdc --input shader/volume.glsl --output shader/volume.glsl.h --slang glsl430:hlsl5:metal_macos -f sokol

    Overview:
    =========
    Shader program: 'volume':
        Get shader desc: volume_shader_desc(sg_query_backend());
        Vertex shader: vs_volume
            Attributes:
                ATTR_vs_volume_position => 0
            Uniform block 'vs_vol_params':
                C struct: vs_vol_params_t
                Bind slot: SLOT_vs_vol_params => 0
        Fragment shader: fs_volume
            Uniform block 'fs_vol_params':
                C struct: fs_vol_params_t
                Bind slot: SLOT_fs_vol_params => 0
            Image 'volume':
                Image type: SG_IMAGETYPE_3D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_volume => 0
            Image 'colormap':
                Image type: SG_IMAGETYPE_2D
                Sample type: SG_IMAGESAMPLETYPE_FLOAT
                Multisampled: false
                Bind slot: SLOT_colormap => 1
            Sampler 'volume_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_volume_smp => 0
            Sampler 'colormap_smp':
                Type: SG_SAMPLERTYPE_FILTERING
                Bind slot: SLOT_colormap_smp => 1
            Image Sampler Pair 'volume_volume_smp':
                Image: volume
                Sampler: volume_smp
            Image Sampler Pair 'colormap_colormap_smp':
                Image: colormap
                Sampler: colormap_smp
*/
#if !defined(SOKOL_GFX_INCLUDED)
#error "Please include sokol_gfx.h before volume.glsl.h"
#endif
#if !defined(SOKOL_SHDC_ALIGN)
#if defined(_MSC_VER)
#define SOKOL_SHDC_ALIGN(a) __declspec(align(a))
#else
#define SOKOL_SHDC_ALIGN(a) __attribute__((aligned(a)))
#endif
#endif
#define ATTR_vs_volume_position (0)
#define SLOT_vs_vol_params (0)
#define SLOT_fs_vol_params (0)
#define SLOT_volume (0)
#define SLOT_colormap (1)
#define SLOT_volume_smp (0)
#define SLOT_colormap_smp (1)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct vs_vol_params_t {
    hmm_mat4 proj_view;
    float eye_pos[3];
    uint8_t _pad_76[4];
    float volume_scale[3];
    uint8_t _pad_92[4];
} vs_vol_params_t;
#pragma pack(pop)
#pragma pack(push,1)
SOKOL_SHDC_ALIGN(16) typedef struct fs_vol_params_t {
    int volume_dims[3];
    float dt_scale;
    float near_clip;
    float far_clip;
    uint8_t _pad_24[8];
    float new_box_min[3];
    uint8_t _pad_44[4];
    float new_box_max[3];
    uint8_t _pad_60[4];
} fs_vol_params_t;
#pragma pack(pop)
/*
    #version 430

    uniform vec4 vs_vol_params[6];
    layout(location = 0) in vec2 position;
    layout(location = 1) flat out vec3 transformed_eye;
    layout(location = 0) out vec3 vray_dir;

    void main()
    {
        gl_Position = vec4(position, 0.0, 0.0);
        transformed_eye = vs_vol_params[4].xyz;
        vray_dir = normalize(vec3(position, 1.0));
    }

*/
static const uint8_t vs_volume_source_glsl430[330] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x75,0x6e,
    0x69,0x66,0x6f,0x72,0x6d,0x20,0x76,0x65,0x63,0x34,0x20,0x76,0x73,0x5f,0x76,0x6f,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x36,0x5d,0x3b,0x0a,0x6c,0x61,0x79,
    0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,
    0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,0x20,0x66,0x6c,0x61,0x74,0x20,0x6f,0x75,
    0x74,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,
    0x65,0x64,0x5f,0x65,0x79,0x65,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,
    0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x6f,0x75,0x74,
    0x20,0x76,0x65,0x63,0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,
    0x0a,0x76,0x6f,0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x34,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,
    0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,
    0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x3d,
    0x20,0x76,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x5b,0x34,
    0x5d,0x2e,0x78,0x79,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x72,0x61,0x79,0x5f,
    0x64,0x69,0x72,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x76,0x65,0x63,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,
    0x2e,0x30,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #version 430

    struct fs_vol_params
    {
        ivec3 volume_dims;
        float dt_scale;
        float near_clip;
        float far_clip;
        vec3 new_box_min;
        vec3 new_box_max;
    };

    uniform fs_vol_params _25;

    layout(binding = 0) uniform sampler3D volume_volume_smp;
    layout(binding = 1) uniform sampler2D colormap_colormap_smp;

    layout(location = 0) out vec4 FragColor;
    layout(location = 0) in vec3 vray_dir;
    layout(location = 1) flat in vec3 transformed_eye;

    vec2 intersect_box(vec3 orig, vec3 dir)
    {
        vec3 _38 = vec3(1.0) / dir;
        vec3 _44 = (_25.new_box_min - orig) * _38;
        vec3 _50 = (_25.new_box_max - orig) * _38;
        vec3 _54 = min(_44, _50);
        vec3 _58 = max(_44, _50);
        return vec2(max(_54.x, max(_54.y, _54.z)), min(_58.x, min(_58.y, _58.z)));
    }

    float wang_hash(inout int seed)
    {
        seed = (seed ^ 61) ^ (seed >> 16);
        seed *= 9;
        seed ^= (seed >> 4);
        seed *= 668265261;
        seed ^= (seed >> 15);
        return float(seed % 2147483647) * 4.656612873077392578125e-10;
    }

    void main()
    {
        FragColor = vec4(1.0, 0.5, 0.5, 0.5);
        vec3 _126 = normalize(vray_dir);
        vec3 param = transformed_eye;
        vec3 param_1 = _126;
        vec2 t_hit = intersect_box(param, param_1);
        t_hit = vec2(max(t_hit.x, _25.near_clip), min(t_hit.y, _25.far_clip));
        vec3 _163 = vec3(_25.volume_dims);
        vec3 _168 = vec3(1.0) / (_163 * abs(_126));
        float _180 = min(_168.x, min(_168.y, _168.z));
        float _181 = _25.dt_scale * _180;
        int param_2 = int(fma(1280.0, gl_FragCoord.y, gl_FragCoord.x));
        float _195 = wang_hash(param_2);
        vec3 p = transformed_eye + (_126 * fma(_195, _181, t_hit.x));
        for (float t = t_hit.x; t < t_hit.y; t = fma(_25.dt_scale, _180, t))
        {
            vec4 _241 = texture(volume_volume_smp, vec3(ivec3(floor(p * _163))));
            float _242 = _241.x;
            float _269 = 1.0 - pow(1.0 - _242, _25.dt_scale);
            float _273 = FragColor.w;
            vec4 _281 = FragColor;
            vec3 _283 = _281.xyz + (vec4(texture(colormap_colormap_smp, vec2(_242, 0.5)).xyz, _242).xyz * ((1.0 - _273) * _269));
            FragColor.x = _283.x;
            FragColor.y = _283.y;
            FragColor.z = _283.z;
            FragColor.w = fma(1.0 - FragColor.w, _269, FragColor.w);
            p += (_126 * _181);
        }
        FragColor = vec4(1.0, 1.0, 0.5, 0.5);
    }

*/
static const uint8_t fs_volume_source_glsl430[2282] = {
    0x23,0x76,0x65,0x72,0x73,0x69,0x6f,0x6e,0x20,0x34,0x33,0x30,0x0a,0x0a,0x73,0x74,
    0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,
    0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x76,0x65,0x63,0x33,0x20,0x76,
    0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x64,0x69,0x6d,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x6e,0x65,0x61,0x72,0x5f,0x63,
    0x6c,0x69,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,
    0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x6e,0x65,0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x6e,0x65,0x77,0x5f,0x62,0x6f,0x78,0x5f,
    0x6d,0x61,0x78,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x66,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x20,0x5f,
    0x32,0x35,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,
    0x69,0x6e,0x67,0x20,0x3d,0x20,0x30,0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,
    0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x33,0x44,0x20,0x76,0x6f,0x6c,0x75,0x6d,
    0x65,0x5f,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x6c,0x61,
    0x79,0x6f,0x75,0x74,0x28,0x62,0x69,0x6e,0x64,0x69,0x6e,0x67,0x20,0x3d,0x20,0x31,
    0x29,0x20,0x75,0x6e,0x69,0x66,0x6f,0x72,0x6d,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,
    0x72,0x32,0x44,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,0x63,0x6f,0x6c,
    0x6f,0x72,0x6d,0x61,0x70,0x5f,0x73,0x6d,0x70,0x3b,0x0a,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,
    0x20,0x6f,0x75,0x74,0x20,0x76,0x65,0x63,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x30,0x29,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,
    0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x6c,0x61,0x79,0x6f,
    0x75,0x74,0x28,0x6c,0x6f,0x63,0x61,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x31,0x29,
    0x20,0x66,0x6c,0x61,0x74,0x20,0x69,0x6e,0x20,0x76,0x65,0x63,0x33,0x20,0x74,0x72,
    0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x3b,0x0a,0x0a,
    0x76,0x65,0x63,0x32,0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x62,
    0x6f,0x78,0x28,0x76,0x65,0x63,0x33,0x20,0x6f,0x72,0x69,0x67,0x2c,0x20,0x76,0x65,
    0x63,0x33,0x20,0x64,0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,
    0x30,0x29,0x20,0x2f,0x20,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x2e,0x6e,0x65,
    0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,
    0x29,0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,
    0x33,0x20,0x5f,0x35,0x30,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x2e,0x6e,0x65,0x77,
    0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x61,0x78,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x29,
    0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x35,0x34,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x34,0x34,0x2c,0x20,
    0x5f,0x35,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x35,0x38,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x35,
    0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x76,
    0x65,0x63,0x32,0x28,0x6d,0x61,0x78,0x28,0x5f,0x35,0x34,0x2e,0x78,0x2c,0x20,0x6d,
    0x61,0x78,0x28,0x5f,0x35,0x34,0x2e,0x79,0x2c,0x20,0x5f,0x35,0x34,0x2e,0x7a,0x29,
    0x29,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x35,0x38,0x2e,0x78,0x2c,0x20,0x6d,0x69,
    0x6e,0x28,0x5f,0x35,0x38,0x2e,0x79,0x2c,0x20,0x5f,0x35,0x38,0x2e,0x7a,0x29,0x29,
    0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x20,0x77,0x61,0x6e,0x67,
    0x5f,0x68,0x61,0x73,0x68,0x28,0x69,0x6e,0x6f,0x75,0x74,0x20,0x69,0x6e,0x74,0x20,
    0x73,0x65,0x65,0x64,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,
    0x20,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x5e,0x20,0x36,0x31,0x29,0x20,0x5e,
    0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,0x20,0x31,0x36,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x2a,0x3d,0x20,0x39,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x5e,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,
    0x3e,0x3e,0x20,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,
    0x2a,0x3d,0x20,0x36,0x36,0x38,0x32,0x36,0x35,0x32,0x36,0x31,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x5e,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,
    0x3e,0x3e,0x20,0x31,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,
    0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,0x73,0x65,0x65,0x64,0x20,0x25,0x20,
    0x32,0x31,0x34,0x37,0x34,0x38,0x33,0x36,0x34,0x37,0x29,0x20,0x2a,0x20,0x34,0x2e,
    0x36,0x35,0x36,0x36,0x31,0x32,0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,
    0x37,0x38,0x31,0x32,0x35,0x65,0x2d,0x31,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,
    0x69,0x64,0x20,0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,
    0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,
    0x31,0x32,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,
    0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,
    0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x63,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,
    0x5f,0x31,0x32,0x36,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x32,0x20,0x74,
    0x5f,0x68,0x69,0x74,0x20,0x3d,0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,
    0x5f,0x62,0x6f,0x78,0x28,0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,
    0x6d,0x5f,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x5f,0x68,0x69,0x74,0x20,
    0x3d,0x20,0x76,0x65,0x63,0x32,0x28,0x6d,0x61,0x78,0x28,0x74,0x5f,0x68,0x69,0x74,
    0x2e,0x78,0x2c,0x20,0x5f,0x32,0x35,0x2e,0x6e,0x65,0x61,0x72,0x5f,0x63,0x6c,0x69,
    0x70,0x29,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x74,0x5f,0x68,0x69,0x74,0x2e,0x79,0x2c,
    0x20,0x5f,0x32,0x35,0x2e,0x66,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x31,0x36,0x33,0x20,0x3d,
    0x20,0x76,0x65,0x63,0x33,0x28,0x5f,0x32,0x35,0x2e,0x76,0x6f,0x6c,0x75,0x6d,0x65,
    0x5f,0x64,0x69,0x6d,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,
    0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x76,0x65,0x63,0x33,0x28,0x31,0x2e,0x30,
    0x29,0x20,0x2f,0x20,0x28,0x5f,0x31,0x36,0x33,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,
    0x5f,0x31,0x32,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x38,0x30,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x36,
    0x38,0x2e,0x78,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x36,0x38,0x2e,0x79,0x2c,
    0x20,0x5f,0x31,0x36,0x38,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x31,0x20,0x3d,0x20,0x5f,0x32,0x35,0x2e,
    0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x20,0x2a,0x20,0x5f,0x31,0x38,0x30,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,
    0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x66,0x6d,0x61,0x28,0x31,0x32,0x38,0x30,0x2e,
    0x30,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x79,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,
    0x31,0x39,0x35,0x20,0x3d,0x20,0x77,0x61,0x6e,0x67,0x5f,0x68,0x61,0x73,0x68,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x65,
    0x63,0x33,0x20,0x70,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,
    0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x2b,0x20,0x28,0x5f,0x31,0x32,0x36,0x20,0x2a,
    0x20,0x66,0x6d,0x61,0x28,0x5f,0x31,0x39,0x35,0x2c,0x20,0x5f,0x31,0x38,0x31,0x2c,
    0x20,0x74,0x5f,0x68,0x69,0x74,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6f,0x72,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x20,0x3d,0x20,0x74,
    0x5f,0x68,0x69,0x74,0x2e,0x78,0x3b,0x20,0x74,0x20,0x3c,0x20,0x74,0x5f,0x68,0x69,
    0x74,0x2e,0x79,0x3b,0x20,0x74,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x5f,0x32,0x35,
    0x2e,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x2c,0x20,0x5f,0x31,0x38,0x30,0x2c,
    0x20,0x74,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,0x32,0x34,0x31,0x20,0x3d,0x20,0x74,
    0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x76,0x6f,
    0x6c,0x75,0x6d,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x76,0x65,0x63,0x33,0x28,0x69,
    0x76,0x65,0x63,0x33,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x70,0x20,0x2a,0x20,0x5f,
    0x31,0x36,0x33,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x34,0x32,0x20,0x3d,0x20,0x5f,0x32,
    0x34,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x39,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,
    0x20,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x32,0x34,0x32,0x2c,
    0x20,0x5f,0x32,0x35,0x2e,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x37,0x33,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x34,0x20,0x5f,
    0x32,0x38,0x31,0x20,0x3d,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x76,0x65,0x63,0x33,0x20,0x5f,0x32,
    0x38,0x33,0x20,0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,
    0x28,0x76,0x65,0x63,0x34,0x28,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x63,0x6f,
    0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,
    0x73,0x6d,0x70,0x2c,0x20,0x76,0x65,0x63,0x32,0x28,0x5f,0x32,0x34,0x32,0x2c,0x20,
    0x30,0x2e,0x35,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x32,0x34,0x32,0x29,
    0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,
    0x32,0x37,0x33,0x29,0x20,0x2a,0x20,0x5f,0x32,0x36,0x39,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x79,
    0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x3d,
    0x20,0x5f,0x32,0x38,0x33,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x3d,0x20,0x66,
    0x6d,0x61,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x2e,0x77,0x2c,0x20,0x5f,0x32,0x36,0x39,0x2c,0x20,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x70,0x20,0x2b,0x3d,0x20,0x28,0x5f,0x31,0x32,0x36,0x20,0x2a,0x20,0x5f,
    0x31,0x38,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,0x20,0x20,0x20,
    0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x76,0x65,0x63,0x34,
    0x28,0x31,0x2e,0x30,0x2c,0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,
    0x30,0x2e,0x35,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    cbuffer vs_vol_params : register(b0)
    {
        row_major float4x4 _32_proj_view : packoffset(c0);
        float3 _32_eye_pos : packoffset(c4);
        float3 _32_volume_scale : packoffset(c5);
    };


    static float4 gl_Position;
    static float2 position;
    static float3 transformed_eye;
    static float3 vray_dir;

    struct SPIRV_Cross_Input
    {
        float2 position : TEXCOORD0;
    };

    struct SPIRV_Cross_Output
    {
        float3 vray_dir : TEXCOORD0;
        nointerpolation float3 transformed_eye : TEXCOORD1;
        float4 gl_Position : SV_Position;
    };

    void vert_main()
    {
        gl_Position = float4(position, 0.0f, 0.0f);
        transformed_eye = _32_eye_pos;
        vray_dir = normalize(float3(position, 1.0f));
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        position = stage_input.position;
        vert_main();
        SPIRV_Cross_Output stage_output;
        stage_output.gl_Position = gl_Position;
        stage_output.transformed_eye = transformed_eye;
        stage_output.vray_dir = vray_dir;
        return stage_output;
    }
*/
static const uint8_t vs_volume_source_hlsl5[981] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x76,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x72,0x6f,0x77,0x5f,0x6d,
    0x61,0x6a,0x6f,0x72,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x5f,0x33,
    0x32,0x5f,0x70,0x72,0x6f,0x6a,0x5f,0x76,0x69,0x65,0x77,0x20,0x3a,0x20,0x70,0x61,
    0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,0x32,0x5f,0x65,0x79,0x65,
    0x5f,0x70,0x6f,0x73,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x34,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x33,0x32,0x5f,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x63,0x61,
    0x6c,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,
    0x63,0x35,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,
    0x69,0x72,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x70,0x6f,0x73,0x69,0x74,
    0x69,0x6f,0x6e,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,
    0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,0x79,
    0x5f,0x64,0x69,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x6e,0x6f,0x69,0x6e,0x74,0x65,0x72,0x70,0x6f,0x6c,
    0x61,0x74,0x69,0x6f,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x72,0x61,
    0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x3a,0x20,0x54,
    0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,
    0x20,0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,
    0x7d,0x3b,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,
    0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x50,0x6f,
    0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x30,0x2e,0x30,0x66,0x2c,0x20,
    0x30,0x2e,0x30,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x3d,0x20,0x5f,0x33,0x32,
    0x5f,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x72,
    0x61,0x79,0x5f,0x64,0x69,0x72,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,
    0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x70,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x66,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x53,
    0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,
    0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,
    0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x6f,0x73,0x69,
    0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,
    0x75,0x74,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x76,0x65,0x72,0x74,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,
    0x3d,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x2e,
    0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,
    0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,
    0x70,0x75,0x74,0x2e,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x20,0x3d,0x20,0x76,
    0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    cbuffer fs_vol_params : register(b0)
    {
        int3 _25_volume_dims : packoffset(c0);
        float _25_dt_scale : packoffset(c0.w);
        float _25_near_clip : packoffset(c1);
        float _25_far_clip : packoffset(c1.y);
        float3 _25_new_box_min : packoffset(c2);
        float3 _25_new_box_max : packoffset(c3);
    };

    Texture3D<float4> volume : register(t0);
    SamplerState volume_smp : register(s0);
    Texture2D<float4> colormap : register(t1);
    SamplerState colormap_smp : register(s1);

    static float4 gl_FragCoord;
    static float4 FragColor;
    static float3 vray_dir;
    static float3 transformed_eye;

    struct SPIRV_Cross_Input
    {
        float3 vray_dir : TEXCOORD0;
        nointerpolation float3 transformed_eye : TEXCOORD1;
        float4 gl_FragCoord : SV_Position;
    };

    struct SPIRV_Cross_Output
    {
        float4 FragColor : SV_Target0;
    };

    float2 intersect_box(float3 orig, float3 dir)
    {
        float3 _38 = 1.0f.xxx / dir;
        float3 _44 = (_25_new_box_min - orig) * _38;
        float3 _50 = (_25_new_box_max - orig) * _38;
        float3 _54 = min(_44, _50);
        float3 _58 = max(_44, _50);
        return float2(max(_54.x, max(_54.y, _54.z)), min(_58.x, min(_58.y, _58.z)));
    }

    float wang_hash(inout int seed)
    {
        seed = (seed ^ 61) ^ (seed >> 16);
        seed *= 9;
        seed ^= (seed >> 4);
        seed *= 668265261;
        seed ^= (seed >> 15);
        return float(seed % 2147483647) * 4.656612873077392578125e-10f;
    }

    void frag_main()
    {
        FragColor = float4(1.0f, 0.5f, 0.5f, 0.5f);
        float3 _126 = normalize(vray_dir);
        float3 param = transformed_eye;
        float3 param_1 = _126;
        float2 t_hit = intersect_box(param, param_1);
        t_hit = float2(max(t_hit.x, _25_near_clip), min(t_hit.y, _25_far_clip));
        float3 _163 = float3(_25_volume_dims);
        float3 _168 = 1.0f.xxx / (_163 * abs(_126));
        float _180 = min(_168.x, min(_168.y, _168.z));
        float _181 = _25_dt_scale * _180;
        int param_2 = int(mad(1280.0f, gl_FragCoord.y, gl_FragCoord.x));
        float _195 = wang_hash(param_2);
        float3 p = transformed_eye + (_126 * mad(_195, _181, t_hit.x));
        for (float t = t_hit.x; t < t_hit.y; t = mad(_25_dt_scale, _180, t))
        {
            float4 _241 = volume.Sample(volume_smp, float3(int3(floor(p * _163))));
            float _242 = _241.x;
            float _269 = 1.0f - pow(1.0f - _242, _25_dt_scale);
            float _273 = FragColor.w;
            float4 _281 = FragColor;
            float3 _283 = _281.xyz + (float4(colormap.Sample(colormap_smp, float2(_242, 0.5f)).xyz, _242).xyz * ((1.0f - _273) * _269));
            FragColor.x = _283.x;
            FragColor.y = _283.y;
            FragColor.z = _283.z;
            FragColor.w = mad(1.0f - FragColor.w, _269, FragColor.w);
            p += (_126 * _181);
        }
        FragColor = float4(1.0f, 1.0f, 0.5f, 0.5f);
    }

    SPIRV_Cross_Output main(SPIRV_Cross_Input stage_input)
    {
        gl_FragCoord = stage_input.gl_FragCoord;
        gl_FragCoord.w = 1.0 / gl_FragCoord.w;
        vray_dir = stage_input.vray_dir;
        transformed_eye = stage_input.transformed_eye;
        frag_main();
        SPIRV_Cross_Output stage_output;
        stage_output.FragColor = FragColor;
        return stage_output;
    }
*/
static const uint8_t fs_volume_source_hlsl5[3061] = {
    0x63,0x62,0x75,0x66,0x66,0x65,0x72,0x20,0x66,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x62,0x30,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x33,0x20,
    0x5f,0x32,0x35,0x5f,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x64,0x69,0x6d,0x73,0x20,
    0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x35,0x5f,
    0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,
    0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x30,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x35,0x5f,0x6e,0x65,0x61,0x72,0x5f,
    0x63,0x6c,0x69,0x70,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,
    0x74,0x28,0x63,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x20,0x5f,0x32,0x35,0x5f,0x66,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x20,0x3a,0x20,
    0x70,0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x31,0x2e,0x79,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x35,
    0x5f,0x6e,0x65,0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x20,0x3a,0x20,0x70,
    0x61,0x63,0x6b,0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x32,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x35,0x5f,0x6e,0x65,
    0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x61,0x78,0x20,0x3a,0x20,0x70,0x61,0x63,0x6b,
    0x6f,0x66,0x66,0x73,0x65,0x74,0x28,0x63,0x33,0x29,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x33,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x3e,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,
    0x74,0x65,0x72,0x28,0x74,0x30,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,0x6c,0x65,0x72,
    0x53,0x74,0x61,0x74,0x65,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x6d,0x70,
    0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x73,0x30,0x29,0x3b,
    0x0a,0x54,0x65,0x78,0x74,0x75,0x72,0x65,0x32,0x44,0x3c,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x3e,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x20,0x3a,0x20,0x72,0x65,
    0x67,0x69,0x73,0x74,0x65,0x72,0x28,0x74,0x31,0x29,0x3b,0x0a,0x53,0x61,0x6d,0x70,
    0x6c,0x65,0x72,0x53,0x74,0x61,0x74,0x65,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,
    0x70,0x5f,0x73,0x6d,0x70,0x20,0x3a,0x20,0x72,0x65,0x67,0x69,0x73,0x74,0x65,0x72,
    0x28,0x73,0x31,0x29,0x3b,0x0a,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,
    0x64,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,
    0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,
    0x69,0x72,0x3b,0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,
    0x65,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,
    0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,
    0x69,0x72,0x20,0x3a,0x20,0x54,0x45,0x58,0x43,0x4f,0x4f,0x52,0x44,0x30,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x6e,0x6f,0x69,0x6e,0x74,0x65,0x72,0x70,0x6f,0x6c,0x61,0x74,
    0x69,0x6f,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x3a,0x20,0x54,0x45,0x58,
    0x43,0x4f,0x4f,0x52,0x44,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x20,
    0x3a,0x20,0x53,0x56,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x3b,0x0a,0x7d,
    0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,0x75,0x74,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x20,0x3a,0x20,0x53,0x56,0x5f,0x54,0x61,0x72,0x67,0x65,0x74,0x30,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x69,0x6e,0x74,
    0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x62,0x6f,0x78,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x6f,0x72,0x69,0x67,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x64,
    0x69,0x72,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,
    0x20,0x5f,0x33,0x38,0x20,0x3d,0x20,0x31,0x2e,0x30,0x66,0x2e,0x78,0x78,0x78,0x20,
    0x2f,0x20,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x5f,0x6e,0x65,0x77,
    0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x29,
    0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x35,0x30,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x5f,0x6e,0x65,
    0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x61,0x78,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,
    0x29,0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x35,0x34,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x34,
    0x34,0x2c,0x20,0x5f,0x35,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,0x6d,0x61,0x78,0x28,0x5f,0x34,
    0x34,0x2c,0x20,0x5f,0x35,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x6d,0x61,0x78,0x28,0x5f,
    0x35,0x34,0x2e,0x78,0x2c,0x20,0x6d,0x61,0x78,0x28,0x5f,0x35,0x34,0x2e,0x79,0x2c,
    0x20,0x5f,0x35,0x34,0x2e,0x7a,0x29,0x29,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x35,
    0x38,0x2e,0x78,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x35,0x38,0x2e,0x79,0x2c,0x20,
    0x5f,0x35,0x38,0x2e,0x7a,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x77,0x61,0x6e,0x67,0x5f,0x68,0x61,0x73,0x68,0x28,0x69,0x6e,0x6f,
    0x75,0x74,0x20,0x69,0x6e,0x74,0x20,0x73,0x65,0x65,0x64,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,
    0x5e,0x20,0x36,0x31,0x29,0x20,0x5e,0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,
    0x20,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x2a,
    0x3d,0x20,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x5e,0x3d,
    0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,0x20,0x34,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x2a,0x3d,0x20,0x36,0x36,0x38,0x32,0x36,0x35,
    0x32,0x36,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x5e,0x3d,
    0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,0x20,0x31,0x35,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,0x61,0x74,0x28,
    0x73,0x65,0x65,0x64,0x20,0x25,0x20,0x32,0x31,0x34,0x37,0x34,0x38,0x33,0x36,0x34,
    0x37,0x29,0x20,0x2a,0x20,0x34,0x2e,0x36,0x35,0x36,0x36,0x31,0x32,0x38,0x37,0x33,
    0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x65,0x2d,0x31,0x30,
    0x66,0x3b,0x0a,0x7d,0x0a,0x0a,0x76,0x6f,0x69,0x64,0x20,0x66,0x72,0x61,0x67,0x5f,
    0x6d,0x61,0x69,0x6e,0x28,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,
    0x31,0x2e,0x30,0x66,0x2c,0x20,0x30,0x2e,0x35,0x66,0x2c,0x20,0x30,0x2e,0x35,0x66,
    0x2c,0x20,0x30,0x2e,0x35,0x66,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x31,0x32,0x36,0x20,0x3d,0x20,0x6e,0x6f,0x72,0x6d,0x61,
    0x6c,0x69,0x7a,0x65,0x28,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,
    0x79,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,
    0x61,0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x32,0x36,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x5f,0x68,0x69,0x74,0x20,
    0x3d,0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x62,0x6f,0x78,0x28,
    0x70,0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x74,0x5f,0x68,0x69,0x74,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x32,0x28,0x6d,0x61,0x78,0x28,0x74,0x5f,0x68,0x69,0x74,0x2e,0x78,0x2c,
    0x20,0x5f,0x32,0x35,0x5f,0x6e,0x65,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x29,0x2c,
    0x20,0x6d,0x69,0x6e,0x28,0x74,0x5f,0x68,0x69,0x74,0x2e,0x79,0x2c,0x20,0x5f,0x32,
    0x35,0x5f,0x66,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x33,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x5f,0x32,0x35,0x5f,0x76,0x6f,0x6c,0x75,0x6d,
    0x65,0x5f,0x64,0x69,0x6d,0x73,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,0x20,0x31,0x2e,0x30,0x66,0x2e,
    0x78,0x78,0x78,0x20,0x2f,0x20,0x28,0x5f,0x31,0x36,0x33,0x20,0x2a,0x20,0x61,0x62,
    0x73,0x28,0x5f,0x31,0x32,0x36,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x30,0x20,0x3d,0x20,0x6d,0x69,0x6e,0x28,0x5f,
    0x31,0x36,0x38,0x2e,0x78,0x2c,0x20,0x6d,0x69,0x6e,0x28,0x5f,0x31,0x36,0x38,0x2e,
    0x79,0x2c,0x20,0x5f,0x31,0x36,0x38,0x2e,0x7a,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x31,0x20,0x3d,0x20,0x5f,0x32,
    0x35,0x5f,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x20,0x2a,0x20,0x5f,0x31,0x38,
    0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,0x70,0x61,0x72,0x61,0x6d,
    0x5f,0x32,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x6d,0x61,0x64,0x28,0x31,0x32,0x38,
    0x30,0x2e,0x30,0x66,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,
    0x72,0x64,0x2e,0x79,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,
    0x72,0x64,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x31,0x39,0x35,0x20,0x3d,0x20,0x77,0x61,0x6e,0x67,0x5f,0x68,0x61,
    0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x20,0x3d,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x2b,0x20,0x28,0x5f,
    0x31,0x32,0x36,0x20,0x2a,0x20,0x6d,0x61,0x64,0x28,0x5f,0x31,0x39,0x35,0x2c,0x20,
    0x5f,0x31,0x38,0x31,0x2c,0x20,0x74,0x5f,0x68,0x69,0x74,0x2e,0x78,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,
    0x74,0x20,0x3d,0x20,0x74,0x5f,0x68,0x69,0x74,0x2e,0x78,0x3b,0x20,0x74,0x20,0x3c,
    0x20,0x74,0x5f,0x68,0x69,0x74,0x2e,0x79,0x3b,0x20,0x74,0x20,0x3d,0x20,0x6d,0x61,
    0x64,0x28,0x5f,0x32,0x35,0x5f,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x2c,0x20,
    0x5f,0x31,0x38,0x30,0x2c,0x20,0x74,0x29,0x29,0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,
    0x32,0x34,0x31,0x20,0x3d,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x2e,0x53,0x61,0x6d,
    0x70,0x6c,0x65,0x28,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x69,0x6e,0x74,0x33,0x28,0x66,0x6c,0x6f,0x6f,
    0x72,0x28,0x70,0x20,0x2a,0x20,0x5f,0x31,0x36,0x33,0x29,0x29,0x29,0x29,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,
    0x34,0x32,0x20,0x3d,0x20,0x5f,0x32,0x34,0x31,0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x36,0x39,0x20,
    0x3d,0x20,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x70,0x6f,0x77,0x28,0x31,0x2e,0x30,
    0x66,0x20,0x2d,0x20,0x5f,0x32,0x34,0x32,0x2c,0x20,0x5f,0x32,0x35,0x5f,0x64,0x74,
    0x5f,0x73,0x63,0x61,0x6c,0x65,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,0x33,0x20,0x3d,0x20,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x38,0x31,0x20,0x3d,
    0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x38,0x33,0x20,
    0x3d,0x20,0x5f,0x32,0x38,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,0x66,0x6c,
    0x6f,0x61,0x74,0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x2e,0x53,0x61,
    0x6d,0x70,0x6c,0x65,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,0x73,0x6d,
    0x70,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x32,0x34,0x32,0x2c,0x20,
    0x30,0x2e,0x35,0x66,0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x32,0x34,0x32,
    0x29,0x2e,0x78,0x79,0x7a,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,
    0x20,0x5f,0x32,0x37,0x33,0x29,0x20,0x2a,0x20,0x5f,0x32,0x36,0x39,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x78,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x79,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,
    0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x7a,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x3d,
    0x20,0x6d,0x61,0x64,0x28,0x31,0x2e,0x30,0x66,0x20,0x2d,0x20,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x2c,0x20,0x5f,0x32,0x36,0x39,0x2c,0x20,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x70,0x20,0x2b,0x3d,0x20,0x28,0x5f,0x31,0x32,0x36,0x20,
    0x2a,0x20,0x5f,0x31,0x38,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,0x0a,0x20,
    0x20,0x20,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x2e,0x30,0x66,0x2c,0x20,0x31,0x2e,0x30,0x66,
    0x2c,0x20,0x30,0x2e,0x35,0x66,0x2c,0x20,0x30,0x2e,0x35,0x66,0x29,0x3b,0x0a,0x7d,
    0x0a,0x0a,0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,
    0x74,0x70,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x28,0x53,0x50,0x49,0x52,0x56,0x5f,
    0x43,0x72,0x6f,0x73,0x73,0x5f,0x49,0x6e,0x70,0x75,0x74,0x20,0x73,0x74,0x61,0x67,
    0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x67,
    0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x3b,0x0a,0x20,0x20,0x20,0x20,0x67,0x6c,0x5f,0x46,
    0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x77,0x20,0x3d,0x20,0x31,0x2e,0x30,
    0x20,0x2f,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,
    0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x20,
    0x3d,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x76,0x72,
    0x61,0x79,0x5f,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x72,0x61,0x6e,
    0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x3d,0x20,0x73,0x74,
    0x61,0x67,0x65,0x5f,0x69,0x6e,0x70,0x75,0x74,0x2e,0x74,0x72,0x61,0x6e,0x73,0x66,
    0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x72,0x61,0x67,0x5f,0x6d,0x61,0x69,0x6e,0x28,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x53,0x50,0x49,0x52,0x56,0x5f,0x43,0x72,0x6f,0x73,0x73,0x5f,0x4f,0x75,0x74,0x70,
    0x75,0x74,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,
    0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,
    0x75,0x72,0x6e,0x20,0x73,0x74,0x61,0x67,0x65,0x5f,0x6f,0x75,0x74,0x70,0x75,0x74,
    0x3b,0x0a,0x7d,0x0a,0x00,
};
/*
    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct vs_vol_params
    {
        float4x4 proj_view;
        float3 eye_pos;
        float3 volume_scale;
    };

    struct main0_out
    {
        float3 vray_dir [[user(locn0)]];
        float3 transformed_eye [[user(locn1)]];
        float4 gl_Position [[position]];
    };

    struct main0_in
    {
        float2 position [[attribute(0)]];
    };

    vertex main0_out main0(main0_in in [[stage_in]], constant vs_vol_params& _32 [[buffer(0)]])
    {
        main0_out out = {};
        out.gl_Position = float4(in.position, 0.0, 0.0);
        out.transformed_eye = _32.eye_pos;
        out.vray_dir = fast::normalize(float3(in.position, 1.0));
        return out;
    }

*/
static const uint8_t vs_volume_source_metal_macos[661] = {
    0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,
    0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,
    0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,
    0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,
    0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x76,
    0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x78,0x34,0x20,0x70,0x72,0x6f,0x6a,
    0x5f,0x76,0x69,0x65,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x65,0x79,0x65,0x5f,0x70,0x6f,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x63,0x61,
    0x6c,0x65,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,
    0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x20,0x5b,
    0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x74,0x72,0x61,0x6e,0x73,
    0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,0x65,0x20,0x5b,0x5b,0x75,0x73,0x65,
    0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,
    0x6f,0x6e,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,0x3b,
    0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,
    0x30,0x5f,0x69,0x6e,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x32,0x20,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x5b,0x5b,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,
    0x0a,0x76,0x65,0x72,0x74,0x65,0x78,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,
    0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,
    0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x76,0x73,0x5f,0x76,0x6f,
    0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x33,0x32,0x20,0x5b,0x5b,
    0x62,0x75,0x66,0x66,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x29,0x0a,0x7b,0x0a,0x20,
    0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6f,0x75,0x74,
    0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x67,
    0x6c,0x5f,0x50,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x20,0x3d,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x28,0x69,0x6e,0x2e,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,
    0x20,0x30,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,
    0x65,0x79,0x65,0x20,0x3d,0x20,0x5f,0x33,0x32,0x2e,0x65,0x79,0x65,0x5f,0x70,0x6f,
    0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x76,0x72,0x61,0x79,0x5f,
    0x64,0x69,0x72,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,
    0x61,0x6c,0x69,0x7a,0x65,0x28,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x69,0x6e,0x2e,
    0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x2c,0x20,0x31,0x2e,0x30,0x29,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
/*
    #pragma clang diagnostic ignored "-Wmissing-prototypes"

    #include <metal_stdlib>
    #include <simd/simd.h>

    using namespace metal;

    struct fs_vol_params
    {
        packed_int3 volume_dims;
        float dt_scale;
        float near_clip;
        float far_clip;
        float3 new_box_min;
        float3 new_box_max;
    };

    struct main0_out
    {
        float4 FragColor [[color(0)]];
    };

    struct main0_in
    {
        float3 vray_dir [[user(locn0)]];
        float3 transformed_eye [[user(locn1), flat]];
    };

    static inline __attribute__((always_inline))
    float2 intersect_box(thread const float3& orig, thread const float3& dir, constant fs_vol_params& _25)
    {
        float3 _38 = float3(1.0) / dir;
        float3 _44 = (_25.new_box_min - orig) * _38;
        float3 _50 = (_25.new_box_max - orig) * _38;
        float3 _54 = fast::min(_44, _50);
        float3 _58 = fast::max(_44, _50);
        return float2(fast::max(_54.x, fast::max(_54.y, _54.z)), fast::min(_58.x, fast::min(_58.y, _58.z)));
    }

    static inline __attribute__((always_inline))
    float wang_hash(thread int& seed)
    {
        seed = (seed ^ 61) ^ (seed >> 16);
        seed *= 9;
        seed ^= (seed >> 4);
        seed *= 668265261;
        seed ^= (seed >> 15);
        return float(seed % 2147483647) * 4.656612873077392578125e-10;
    }

    fragment main0_out main0(main0_in in [[stage_in]], constant fs_vol_params& _25 [[buffer(0)]], texture3d<float> volume [[texture(0)]], texture2d<float> colormap [[texture(1)]], sampler volume_smp [[sampler(0)]], sampler colormap_smp [[sampler(1)]], float4 gl_FragCoord [[position]])
    {
        main0_out out = {};
        out.FragColor = float4(1.0, 0.5, 0.5, 0.5);
        float3 _126 = fast::normalize(in.vray_dir);
        float3 param = in.transformed_eye;
        float3 param_1 = _126;
        float2 t_hit = intersect_box(param, param_1, _25);
        t_hit = float2(fast::max(t_hit.x, _25.near_clip), fast::min(t_hit.y, _25.far_clip));
        float3 _163 = float3(int3(_25.volume_dims));
        float3 _168 = float3(1.0) / (_163 * abs(_126));
        float _180 = fast::min(_168.x, fast::min(_168.y, _168.z));
        float _181 = _25.dt_scale * _180;
        int param_2 = int(fma(1280.0, gl_FragCoord.y, gl_FragCoord.x));
        float _195 = wang_hash(param_2);
        float3 p = in.transformed_eye + (_126 * fma(_195, _181, t_hit.x));
        for (float t = t_hit.x; t < t_hit.y; t = fma(_25.dt_scale, _180, t))
        {
            float4 _241 = volume.sample(volume_smp, float3(int3(floor(p * _163))));
            float _242 = _241.x;
            float _269 = 1.0 - pow(1.0 - _242, _25.dt_scale);
            float _273 = out.FragColor.w;
            float4 _281 = out.FragColor;
            float3 _283 = _281.xyz + (float4(colormap.sample(colormap_smp, float2(_242, 0.5)).xyz, _242).xyz * ((1.0 - _273) * _269));
            out.FragColor.x = _283.x;
            out.FragColor.y = _283.y;
            out.FragColor.z = _283.z;
            out.FragColor.w = fma(1.0 - out.FragColor.w, _269, out.FragColor.w);
            p += (_126 * _181);
        }
        out.FragColor = float4(1.0, 1.0, 0.5, 0.5);
        return out;
    }

*/
static const uint8_t fs_volume_source_metal_macos[2933] = {
    0x23,0x70,0x72,0x61,0x67,0x6d,0x61,0x20,0x63,0x6c,0x61,0x6e,0x67,0x20,0x64,0x69,
    0x61,0x67,0x6e,0x6f,0x73,0x74,0x69,0x63,0x20,0x69,0x67,0x6e,0x6f,0x72,0x65,0x64,
    0x20,0x22,0x2d,0x57,0x6d,0x69,0x73,0x73,0x69,0x6e,0x67,0x2d,0x70,0x72,0x6f,0x74,
    0x6f,0x74,0x79,0x70,0x65,0x73,0x22,0x0a,0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,
    0x65,0x20,0x3c,0x6d,0x65,0x74,0x61,0x6c,0x5f,0x73,0x74,0x64,0x6c,0x69,0x62,0x3e,
    0x0a,0x23,0x69,0x6e,0x63,0x6c,0x75,0x64,0x65,0x20,0x3c,0x73,0x69,0x6d,0x64,0x2f,
    0x73,0x69,0x6d,0x64,0x2e,0x68,0x3e,0x0a,0x0a,0x75,0x73,0x69,0x6e,0x67,0x20,0x6e,
    0x61,0x6d,0x65,0x73,0x70,0x61,0x63,0x65,0x20,0x6d,0x65,0x74,0x61,0x6c,0x3b,0x0a,
    0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x66,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,
    0x61,0x72,0x61,0x6d,0x73,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x70,0x61,0x63,0x6b,
    0x65,0x64,0x5f,0x69,0x6e,0x74,0x33,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x64,
    0x69,0x6d,0x73,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x64,
    0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x20,0x6e,0x65,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x66,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x6e,0x65,0x77,
    0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,
    0x6f,0x61,0x74,0x33,0x20,0x6e,0x65,0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x61,0x78,
    0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,
    0x6e,0x30,0x5f,0x6f,0x75,0x74,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x34,0x20,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x5b,0x5b,
    0x63,0x6f,0x6c,0x6f,0x72,0x28,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,
    0x73,0x74,0x72,0x75,0x63,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x76,0x72,0x61,
    0x79,0x5f,0x64,0x69,0x72,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,
    0x6e,0x30,0x29,0x5d,0x5d,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,
    0x65,0x20,0x5b,0x5b,0x75,0x73,0x65,0x72,0x28,0x6c,0x6f,0x63,0x6e,0x31,0x29,0x2c,
    0x20,0x66,0x6c,0x61,0x74,0x5d,0x5d,0x3b,0x0a,0x7d,0x3b,0x0a,0x0a,0x73,0x74,0x61,
    0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,0x5f,0x61,0x74,0x74,
    0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,0x77,0x61,0x79,0x73,
    0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,0x6f,0x61,0x74,0x32,
    0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x62,0x6f,0x78,0x28,0x74,
    0x68,0x72,0x65,0x61,0x64,0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x26,0x20,0x6f,0x72,0x69,0x67,0x2c,0x20,0x74,0x68,0x72,0x65,0x61,0x64,
    0x20,0x63,0x6f,0x6e,0x73,0x74,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x26,0x20,0x64,
    0x69,0x72,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,
    0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,0x73,0x26,0x20,0x5f,0x32,0x35,0x29,
    0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x33,
    0x38,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,
    0x2f,0x20,0x64,0x69,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,
    0x33,0x20,0x5f,0x34,0x34,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x2e,0x6e,0x65,0x77,
    0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x69,0x6e,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,0x29,
    0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x33,0x20,0x5f,0x35,0x30,0x20,0x3d,0x20,0x28,0x5f,0x32,0x35,0x2e,0x6e,0x65,
    0x77,0x5f,0x62,0x6f,0x78,0x5f,0x6d,0x61,0x78,0x20,0x2d,0x20,0x6f,0x72,0x69,0x67,
    0x29,0x20,0x2a,0x20,0x5f,0x33,0x38,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x33,0x20,0x5f,0x35,0x34,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,
    0x6d,0x69,0x6e,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,0x35,0x30,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x35,0x38,0x20,0x3d,0x20,
    0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,0x28,0x5f,0x34,0x34,0x2c,0x20,0x5f,
    0x35,0x30,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,0x78,
    0x28,0x5f,0x35,0x34,0x2e,0x78,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x5f,0x35,0x34,0x2e,0x79,0x2c,0x20,0x5f,0x35,0x34,0x2e,0x7a,0x29,0x29,
    0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x35,0x38,0x2e,
    0x78,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x35,0x38,
    0x2e,0x79,0x2c,0x20,0x5f,0x35,0x38,0x2e,0x7a,0x29,0x29,0x29,0x3b,0x0a,0x7d,0x0a,
    0x0a,0x73,0x74,0x61,0x74,0x69,0x63,0x20,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x20,0x5f,
    0x5f,0x61,0x74,0x74,0x72,0x69,0x62,0x75,0x74,0x65,0x5f,0x5f,0x28,0x28,0x61,0x6c,
    0x77,0x61,0x79,0x73,0x5f,0x69,0x6e,0x6c,0x69,0x6e,0x65,0x29,0x29,0x0a,0x66,0x6c,
    0x6f,0x61,0x74,0x20,0x77,0x61,0x6e,0x67,0x5f,0x68,0x61,0x73,0x68,0x28,0x74,0x68,
    0x72,0x65,0x61,0x64,0x20,0x69,0x6e,0x74,0x26,0x20,0x73,0x65,0x65,0x64,0x29,0x0a,
    0x7b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x3d,0x20,0x28,0x73,0x65,
    0x65,0x64,0x20,0x5e,0x20,0x36,0x31,0x29,0x20,0x5e,0x20,0x28,0x73,0x65,0x65,0x64,
    0x20,0x3e,0x3e,0x20,0x31,0x36,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,
    0x64,0x20,0x2a,0x3d,0x20,0x39,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,
    0x20,0x5e,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,0x20,0x34,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,0x20,0x2a,0x3d,0x20,0x36,0x36,0x38,
    0x32,0x36,0x35,0x32,0x36,0x31,0x3b,0x0a,0x20,0x20,0x20,0x20,0x73,0x65,0x65,0x64,
    0x20,0x5e,0x3d,0x20,0x28,0x73,0x65,0x65,0x64,0x20,0x3e,0x3e,0x20,0x31,0x35,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x66,0x6c,0x6f,
    0x61,0x74,0x28,0x73,0x65,0x65,0x64,0x20,0x25,0x20,0x32,0x31,0x34,0x37,0x34,0x38,
    0x33,0x36,0x34,0x37,0x29,0x20,0x2a,0x20,0x34,0x2e,0x36,0x35,0x36,0x36,0x31,0x32,
    0x38,0x37,0x33,0x30,0x37,0x37,0x33,0x39,0x32,0x35,0x37,0x38,0x31,0x32,0x35,0x65,
    0x2d,0x31,0x30,0x3b,0x0a,0x7d,0x0a,0x0a,0x66,0x72,0x61,0x67,0x6d,0x65,0x6e,0x74,
    0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,0x74,0x20,0x6d,0x61,0x69,0x6e,0x30,
    0x28,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x69,0x6e,0x20,0x69,0x6e,0x20,0x5b,0x5b,0x73,
    0x74,0x61,0x67,0x65,0x5f,0x69,0x6e,0x5d,0x5d,0x2c,0x20,0x63,0x6f,0x6e,0x73,0x74,
    0x61,0x6e,0x74,0x20,0x66,0x73,0x5f,0x76,0x6f,0x6c,0x5f,0x70,0x61,0x72,0x61,0x6d,
    0x73,0x26,0x20,0x5f,0x32,0x35,0x20,0x5b,0x5b,0x62,0x75,0x66,0x66,0x65,0x72,0x28,
    0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x33,0x64,0x3c,
    0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x76,0x6f,0x6c,0x75,0x6d,0x65,0x20,0x5b,0x5b,
    0x74,0x65,0x78,0x74,0x75,0x72,0x65,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x74,0x65,
    0x78,0x74,0x75,0x72,0x65,0x32,0x64,0x3c,0x66,0x6c,0x6f,0x61,0x74,0x3e,0x20,0x63,
    0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x20,0x5b,0x5b,0x74,0x65,0x78,0x74,0x75,0x72,
    0x65,0x28,0x31,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x20,
    0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x73,0x6d,0x70,0x20,0x5b,0x5b,0x73,0x61,0x6d,
    0x70,0x6c,0x65,0x72,0x28,0x30,0x29,0x5d,0x5d,0x2c,0x20,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x72,0x20,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,0x73,0x6d,0x70,0x20,
    0x5b,0x5b,0x73,0x61,0x6d,0x70,0x6c,0x65,0x72,0x28,0x31,0x29,0x5d,0x5d,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6f,0x72,0x64,0x20,0x5b,0x5b,0x70,0x6f,0x73,0x69,0x74,0x69,0x6f,0x6e,0x5d,0x5d,
    0x29,0x0a,0x7b,0x0a,0x20,0x20,0x20,0x20,0x6d,0x61,0x69,0x6e,0x30,0x5f,0x6f,0x75,
    0x74,0x20,0x6f,0x75,0x74,0x20,0x3d,0x20,0x7b,0x7d,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x2c,
    0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x32,0x36,0x20,0x3d,0x20,0x66,0x61,
    0x73,0x74,0x3a,0x3a,0x6e,0x6f,0x72,0x6d,0x61,0x6c,0x69,0x7a,0x65,0x28,0x69,0x6e,
    0x2e,0x76,0x72,0x61,0x79,0x5f,0x64,0x69,0x72,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,0x72,0x61,0x6d,0x20,0x3d,0x20,0x69,
    0x6e,0x2e,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,0x79,
    0x65,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x61,
    0x72,0x61,0x6d,0x5f,0x31,0x20,0x3d,0x20,0x5f,0x31,0x32,0x36,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x20,0x74,0x5f,0x68,0x69,0x74,0x20,0x3d,
    0x20,0x69,0x6e,0x74,0x65,0x72,0x73,0x65,0x63,0x74,0x5f,0x62,0x6f,0x78,0x28,0x70,
    0x61,0x72,0x61,0x6d,0x2c,0x20,0x70,0x61,0x72,0x61,0x6d,0x5f,0x31,0x2c,0x20,0x5f,
    0x32,0x35,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x74,0x5f,0x68,0x69,0x74,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x61,
    0x78,0x28,0x74,0x5f,0x68,0x69,0x74,0x2e,0x78,0x2c,0x20,0x5f,0x32,0x35,0x2e,0x6e,
    0x65,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x29,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,
    0x3a,0x6d,0x69,0x6e,0x28,0x74,0x5f,0x68,0x69,0x74,0x2e,0x79,0x2c,0x20,0x5f,0x32,
    0x35,0x2e,0x66,0x61,0x72,0x5f,0x63,0x6c,0x69,0x70,0x29,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x33,0x20,0x3d,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x69,0x6e,0x74,0x33,0x28,0x5f,0x32,0x35,0x2e,
    0x76,0x6f,0x6c,0x75,0x6d,0x65,0x5f,0x64,0x69,0x6d,0x73,0x29,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x31,0x36,0x38,0x20,0x3d,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x31,0x2e,0x30,0x29,0x20,0x2f,0x20,0x28,
    0x5f,0x31,0x36,0x33,0x20,0x2a,0x20,0x61,0x62,0x73,0x28,0x5f,0x31,0x32,0x36,0x29,
    0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,
    0x30,0x20,0x3d,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,0x5f,0x31,
    0x36,0x38,0x2e,0x78,0x2c,0x20,0x66,0x61,0x73,0x74,0x3a,0x3a,0x6d,0x69,0x6e,0x28,
    0x5f,0x31,0x36,0x38,0x2e,0x79,0x2c,0x20,0x5f,0x31,0x36,0x38,0x2e,0x7a,0x29,0x29,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x38,0x31,
    0x20,0x3d,0x20,0x5f,0x32,0x35,0x2e,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x20,
    0x2a,0x20,0x5f,0x31,0x38,0x30,0x3b,0x0a,0x20,0x20,0x20,0x20,0x69,0x6e,0x74,0x20,
    0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x20,0x3d,0x20,0x69,0x6e,0x74,0x28,0x66,0x6d,
    0x61,0x28,0x31,0x32,0x38,0x30,0x2e,0x30,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x79,0x2c,0x20,0x67,0x6c,0x5f,0x46,0x72,0x61,
    0x67,0x43,0x6f,0x6f,0x72,0x64,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x31,0x39,0x35,0x20,0x3d,0x20,0x77,0x61,0x6e,
    0x67,0x5f,0x68,0x61,0x73,0x68,0x28,0x70,0x61,0x72,0x61,0x6d,0x5f,0x32,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x70,0x20,0x3d,0x20,
    0x69,0x6e,0x2e,0x74,0x72,0x61,0x6e,0x73,0x66,0x6f,0x72,0x6d,0x65,0x64,0x5f,0x65,
    0x79,0x65,0x20,0x2b,0x20,0x28,0x5f,0x31,0x32,0x36,0x20,0x2a,0x20,0x66,0x6d,0x61,
    0x28,0x5f,0x31,0x39,0x35,0x2c,0x20,0x5f,0x31,0x38,0x31,0x2c,0x20,0x74,0x5f,0x68,
    0x69,0x74,0x2e,0x78,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x66,0x6f,0x72,0x20,
    0x28,0x66,0x6c,0x6f,0x61,0x74,0x20,0x74,0x20,0x3d,0x20,0x74,0x5f,0x68,0x69,0x74,
    0x2e,0x78,0x3b,0x20,0x74,0x20,0x3c,0x20,0x74,0x5f,0x68,0x69,0x74,0x2e,0x79,0x3b,
    0x20,0x74,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,0x5f,0x32,0x35,0x2e,0x64,0x74,0x5f,
    0x73,0x63,0x61,0x6c,0x65,0x2c,0x20,0x5f,0x31,0x38,0x30,0x2c,0x20,0x74,0x29,0x29,
    0x0a,0x20,0x20,0x20,0x20,0x7b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x34,0x20,0x5f,0x32,0x34,0x31,0x20,0x3d,0x20,0x76,0x6f,0x6c,
    0x75,0x6d,0x65,0x2e,0x73,0x61,0x6d,0x70,0x6c,0x65,0x28,0x76,0x6f,0x6c,0x75,0x6d,
    0x65,0x5f,0x73,0x6d,0x70,0x2c,0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x28,0x69,0x6e,
    0x74,0x33,0x28,0x66,0x6c,0x6f,0x6f,0x72,0x28,0x70,0x20,0x2a,0x20,0x5f,0x31,0x36,
    0x33,0x29,0x29,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,
    0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x34,0x32,0x20,0x3d,0x20,0x5f,0x32,0x34,0x31,
    0x2e,0x78,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x20,0x5f,0x32,0x36,0x39,0x20,0x3d,0x20,0x31,0x2e,0x30,0x20,0x2d,0x20,0x70,
    0x6f,0x77,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x32,0x34,0x32,0x2c,0x20,0x5f,
    0x32,0x35,0x2e,0x64,0x74,0x5f,0x73,0x63,0x61,0x6c,0x65,0x29,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,0x74,0x20,0x5f,0x32,0x37,0x33,
    0x20,0x3d,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,
    0x2e,0x77,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x66,0x6c,0x6f,0x61,
    0x74,0x34,0x20,0x5f,0x32,0x38,0x31,0x20,0x3d,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,
    0x20,0x66,0x6c,0x6f,0x61,0x74,0x33,0x20,0x5f,0x32,0x38,0x33,0x20,0x3d,0x20,0x5f,
    0x32,0x38,0x31,0x2e,0x78,0x79,0x7a,0x20,0x2b,0x20,0x28,0x66,0x6c,0x6f,0x61,0x74,
    0x34,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x2e,0x73,0x61,0x6d,0x70,0x6c,
    0x65,0x28,0x63,0x6f,0x6c,0x6f,0x72,0x6d,0x61,0x70,0x5f,0x73,0x6d,0x70,0x2c,0x20,
    0x66,0x6c,0x6f,0x61,0x74,0x32,0x28,0x5f,0x32,0x34,0x32,0x2c,0x20,0x30,0x2e,0x35,
    0x29,0x29,0x2e,0x78,0x79,0x7a,0x2c,0x20,0x5f,0x32,0x34,0x32,0x29,0x2e,0x78,0x79,
    0x7a,0x20,0x2a,0x20,0x28,0x28,0x31,0x2e,0x30,0x20,0x2d,0x20,0x5f,0x32,0x37,0x33,
    0x29,0x20,0x2a,0x20,0x5f,0x32,0x36,0x39,0x29,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,
    0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,
    0x72,0x2e,0x78,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x78,0x3b,0x0a,0x20,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x2e,0x79,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x79,0x3b,0x0a,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,
    0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x7a,0x20,0x3d,0x20,0x5f,0x32,0x38,0x33,0x2e,0x7a,
    0x3b,0x0a,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,
    0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x20,0x3d,0x20,0x66,0x6d,0x61,0x28,
    0x31,0x2e,0x30,0x20,0x2d,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,
    0x6c,0x6f,0x72,0x2e,0x77,0x2c,0x20,0x5f,0x32,0x36,0x39,0x2c,0x20,0x6f,0x75,0x74,
    0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,0x6f,0x72,0x2e,0x77,0x29,0x3b,0x0a,0x20,
    0x20,0x20,0x20,0x20,0x20,0x20,0x20,0x70,0x20,0x2b,0x3d,0x20,0x28,0x5f,0x31,0x32,
    0x36,0x20,0x2a,0x20,0x5f,0x31,0x38,0x31,0x29,0x3b,0x0a,0x20,0x20,0x20,0x20,0x7d,
    0x0a,0x20,0x20,0x20,0x20,0x6f,0x75,0x74,0x2e,0x46,0x72,0x61,0x67,0x43,0x6f,0x6c,
    0x6f,0x72,0x20,0x3d,0x20,0x66,0x6c,0x6f,0x61,0x74,0x34,0x28,0x31,0x2e,0x30,0x2c,
    0x20,0x31,0x2e,0x30,0x2c,0x20,0x30,0x2e,0x35,0x2c,0x20,0x30,0x2e,0x35,0x29,0x3b,
    0x0a,0x20,0x20,0x20,0x20,0x72,0x65,0x74,0x75,0x72,0x6e,0x20,0x6f,0x75,0x74,0x3b,
    0x0a,0x7d,0x0a,0x0a,0x00,
};
static inline const sg_shader_desc* volume_shader_desc(sg_backend backend) {
    if (backend == SG_BACKEND_GLCORE) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].name = "position";
            desc.vs.source = (const char*)vs_volume_source_glsl430;
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 96;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.vs.uniform_blocks[0].uniforms[0].name = "vs_vol_params";
            desc.vs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_FLOAT4;
            desc.vs.uniform_blocks[0].uniforms[0].array_count = 6;
            desc.fs.source = (const char*)fs_volume_source_glsl430;
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.uniform_blocks[0].uniforms[0].name = "_25.volume_dims";
            desc.fs.uniform_blocks[0].uniforms[0].type = SG_UNIFORMTYPE_INT3;
            desc.fs.uniform_blocks[0].uniforms[0].array_count = 0;
            desc.fs.uniform_blocks[0].uniforms[1].name = "_25.dt_scale";
            desc.fs.uniform_blocks[0].uniforms[1].type = SG_UNIFORMTYPE_FLOAT;
            desc.fs.uniform_blocks[0].uniforms[1].array_count = 0;
            desc.fs.uniform_blocks[0].uniforms[2].name = "_25.near_clip";
            desc.fs.uniform_blocks[0].uniforms[2].type = SG_UNIFORMTYPE_FLOAT;
            desc.fs.uniform_blocks[0].uniforms[2].array_count = 0;
            desc.fs.uniform_blocks[0].uniforms[3].name = "_25.far_clip";
            desc.fs.uniform_blocks[0].uniforms[3].type = SG_UNIFORMTYPE_FLOAT;
            desc.fs.uniform_blocks[0].uniforms[3].array_count = 0;
            desc.fs.uniform_blocks[0].uniforms[4].name = "_25.new_box_min";
            desc.fs.uniform_blocks[0].uniforms[4].type = SG_UNIFORMTYPE_FLOAT3;
            desc.fs.uniform_blocks[0].uniforms[4].array_count = 0;
            desc.fs.uniform_blocks[0].uniforms[5].name = "_25.new_box_max";
            desc.fs.uniform_blocks[0].uniforms[5].type = SG_UNIFORMTYPE_FLOAT3;
            desc.fs.uniform_blocks[0].uniforms[5].array_count = 0;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_3D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[1].used = true;
            desc.fs.images[1].multisampled = false;
            desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[1].used = true;
            desc.fs.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[0].glsl_name = "volume_volume_smp";
            desc.fs.image_sampler_pairs[1].used = true;
            desc.fs.image_sampler_pairs[1].image_slot = 1;
            desc.fs.image_sampler_pairs[1].sampler_slot = 1;
            desc.fs.image_sampler_pairs[1].glsl_name = "colormap_colormap_smp";
            desc.label = "volume_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_D3D11) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.attrs[0].sem_name = "TEXCOORD";
            desc.attrs[0].sem_index = 0;
            desc.vs.source = (const char*)vs_volume_source_hlsl5;
            desc.vs.d3d11_target = "vs_5_0";
            desc.vs.entry = "main";
            desc.vs.uniform_blocks[0].size = 96;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_volume_source_hlsl5;
            desc.fs.d3d11_target = "ps_5_0";
            desc.fs.entry = "main";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_3D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[1].used = true;
            desc.fs.images[1].multisampled = false;
            desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[1].used = true;
            desc.fs.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[1].used = true;
            desc.fs.image_sampler_pairs[1].image_slot = 1;
            desc.fs.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "volume_shader";
        }
        return &desc;
    }
    if (backend == SG_BACKEND_METAL_MACOS) {
        static sg_shader_desc desc;
        static bool valid;
        if (!valid) {
            valid = true;
            desc.vs.source = (const char*)vs_volume_source_metal_macos;
            desc.vs.entry = "main0";
            desc.vs.uniform_blocks[0].size = 96;
            desc.vs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.source = (const char*)fs_volume_source_metal_macos;
            desc.fs.entry = "main0";
            desc.fs.uniform_blocks[0].size = 64;
            desc.fs.uniform_blocks[0].layout = SG_UNIFORMLAYOUT_STD140;
            desc.fs.images[0].used = true;
            desc.fs.images[0].multisampled = false;
            desc.fs.images[0].image_type = SG_IMAGETYPE_3D;
            desc.fs.images[0].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.images[1].used = true;
            desc.fs.images[1].multisampled = false;
            desc.fs.images[1].image_type = SG_IMAGETYPE_2D;
            desc.fs.images[1].sample_type = SG_IMAGESAMPLETYPE_FLOAT;
            desc.fs.samplers[0].used = true;
            desc.fs.samplers[0].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.samplers[1].used = true;
            desc.fs.samplers[1].sampler_type = SG_SAMPLERTYPE_FILTERING;
            desc.fs.image_sampler_pairs[0].used = true;
            desc.fs.image_sampler_pairs[0].image_slot = 0;
            desc.fs.image_sampler_pairs[0].sampler_slot = 0;
            desc.fs.image_sampler_pairs[1].used = true;
            desc.fs.image_sampler_pairs[1].image_slot = 1;
            desc.fs.image_sampler_pairs[1].sampler_slot = 1;
            desc.label = "volume_shader";
        }
        return &desc;
    }
    return 0;
}
